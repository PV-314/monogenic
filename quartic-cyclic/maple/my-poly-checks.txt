# for checking irreducibility etc of "my" polynomials, f_z(x)

# 18 Sept 2024
root_location_check:=proc()
	local f,rt1LB,rt1UB,rt2LB,rt2UB,rt3LB,rt3UB,rt4LB,rt4UB,
	rtSep,rtSepNum,v1LB,v1UB,v2LB,v2UB,v3LB,v3UB,v4LB,v4UB:

	with(numtheory):
	f:=x^4-z*x^3+(-3/8*z^6+2*z^4-37/8*z^2+4)*x^2+(19/16*z^7-9/2*z^5+135/16*z^3-6*z-1/8*z^9)*x+2+9/4*z^6-107/128*z^8+1/4*z^2+5/32*z^10-3/256*z^12-719/256*z^4:
	print("disc(f)=",factor(discrim(f,x))):
	
	Digits:=100:
	rt1UB:=-z^3/4+z/4-1/z^3-2/z^5:
	rt1LB:=rt1UB-2/z^7:
	v1LB:=expand(subs(x=rt1LB,f)):
	print("numer(f_z(rt1LB))=",sort(numer(v1LB),z)):
	print("numer(f_z(rt1LB)) roots=",fsolve(numer(v1LB),z)):
	v1UB:=expand(subs(x=rt1UB,f)):
	print("numer(f_z(rt1UB))=",sort(numer(v1UB),z)):
	print("numer(f_z(rt1UB)) roots=",fsolve(numer(v1UB),z)):

	rt2UB:=-z^3/4+5*z/4-1/z-1/z^3:
	rt2LB:=rt2UB-1/z^5:
	v2LB:=expand(subs(x=rt2LB,f)):
	print("numer(f_z(rt2LB))=",sort(numer(v2LB),z)):
	print("numer(f_z(rt2LB)) roots=",fsolve(numer(v2LB),z)):
	v2UB:=expand(subs(x=rt2UB,f)):
	print("numer(f_z(rt2UB))=",sort(numer(v2UB),z)):
	print("numer(f_z(rt2UB)) roots=",fsolve(numer(v2UB),z)):
	
	rt3LB:=-z^3/4+5*z/4-1/z+1/z^5+3/z^7+6/z^9:
	rt3UB:=rt3LB+7/z^11:
	v3LB:=expand(subs(x=rt3LB,f)):
	print("numer(f_z(rt3LB))=",sort(numer(v3LB),z)):
	print("numer(f_z(rt3LB)) roots=",fsolve(numer(v3LB),z)):
	v3UB:=expand(subs(x=rt3UB,f)):
	print("numer(f_z(rt3UB))=",sort(numer(v3UB),z)):
	print("numer(f_z(rt3UB)) roots=",fsolve(numer(v3UB),z)):

	rtSep:=rt2UB-rt3LB:
	rtSepNum:=numer(rtSep):
	print("rtSepNum roots=",fsolve(rtSepNum,z)):

	rt4LB:=3*z^3/4-7*z/4+2/z+2/z^3:
	rt4UB:=rt4LB+2/z^5:
	v4LB:=expand(subs(x=rt4LB,f)):
	print("numer(f_z(rt4LB))=",sort(numer(v4LB),z)):
	print("numer(f_z(rt4LB)) roots=",fsolve(numer(v4LB),z)):
	v4UB:=expand(subs(x=rt4UB,f)):
	print("numer(f_z(rt4UB))=",sort(numer(v4UB),z)):
	print("numer(f_z(rt4UB)) roots=",fsolve(numer(v4UB),z)):
end proc:

# 18 Sept 2024
quadratic_factorisation:=proc()
	local a0v,a1v,b0v,b1v,cf0,f,f1,f2,fFact1,fFact2,fFact3,fFact4:

	with(numtheory):
	f:=x^4-z*x^3+(-3/8*z^6+2*z^4-37/8*z^2+4)*x^2+(19/16*z^7-9/2*z^5+135/16*z^3-6*z-1/8*z^9)*x+2+9/4*z^6-107/128*z^8+1/4*z^2+5/32*z^10-3/256*z^12-719/256*z^4:
	
	f1:=x^2+a1*x+a0:
	f2:=x^2+b1*x+b0:
	fFact1:=collect(expand(f1*f2),x):
	print("f1=",f1):
	print("f2=",f2):
	print("f1*f2=",sort(fFact1,x)):
	factor(discrim(f,x)):
	factor(discrim(f1,x)):
	factor(discrim(f2,x)):
	factor(resultant(f1,f2,x)):
	
	b1v:=solve(coeff(fFact1,x,3)=coeff(f,x,3),b1):
	print("b1=",b1v):
	fFact2:=subs(b1=b1v,fFact1):
	
	b0v:=solve(coeff(f,x,2)=coeff(fFact2,x,2),b0):
	print("b0=",b0v):
	fFact3:=collect(expand(subs(b0=b0v,fFact2)),x):
	
	a0v:=solve(coeff(f,x,1)=coeff(fFact3,x,1),a0):
	a0v:=factor(a0v):
	print("a0=",a0v):
	fFact4:=collect(expand(subs(a0=a0v,fFact3)),x):
	#print("simplify(coeff(fFact4,x,0))=",simplify(coeff(fFact4,x,0))):
	print("coeff(f,x,0)-coeff(fFact4,x,0)=",factor(coeff(f,x,0)-coeff(fFact4,x,0))):
	
	a1v:=solve(coeff(f,x,0)=coeff(fFact4,x,0),a1):
	print("a1=",a1v):
	print("z^8-8*z^6+28*z^4-48*z^2+32=",factor(z^8-8*z^6+28*z^4-48*z^2+32)):
end proc:

# 18 Sept 2024
eisenstein_check_5:=proc()
	eisenstein_check(5):
end proc:

# 18 Sept 2024
eisenstein_check_13:=proc()
	eisenstein_check(13):
end proc:

# 18 Sept 2024
eisenstein_check_17:=proc()
	eisenstein_check(17):
end proc:

# 18 Sept 2024
eisenstein_check:=proc(zv)
	local a0v,a1v,f,fa,fa1,g1,g2,g3,g4:
	
	f:=x^4-z*x^3+(-3/8*z^6+2*z^4-37/8*z^2+4)*x^2+(19/16*z^7-9/2*z^5+135/16*z^3-6*z-1/8*z^9)*x+2+9/4*z^6-107/128*z^8+1/4*z^2+5/32*z^10-3/256*z^12-719/256*z^4:
	fa:=sort(collect(subs(x=a1*x+a0,subs(z=zv,f)),x),x):
	for a1v from -301 to 301 do
	for a0v from -301 to 301 do
		fa1:=subs(a1=a1v,a0=a0v,fa):
		g1:=gcd(coeff(fa1,x,3),coeff(fa1,x,2)):
		if g1<> 1 then
			g2:=gcd(g1,coeff(fa1,x,1)):
			if g2<>1 then
				g3:=gcd(g2,coeff(fa1,x,0)):
				if g3<>1 then
					g4:=gcd(g3,coeff(fa1,x,4)):
					if g4<>1 and g4<g3 then
						#printf("a1=%6d, a0=%6d, %7d, %12d, g1=%4d, g2=%3d, g3=%3d, g=%3d, fa1=f_%1d(a1*x+a0)=%a\n",a1v,a0v,coeff(fa1,x,3),coeff(fa1,x,2),g1,g2,g3,g3/g4,zv,fa1):
						printf("try p=%3d, using fa1=f_%1d(a1*x+a0)=%a\n",g3/g4,zv,fa1):
						print("coeff(fa1,x,4)=",ifactor(coeff(fa1,x,4)),"coeff(fa1,x,3)=",ifactor(coeff(fa1,x,3))):
						print("coeff(fa1,x,2)=",ifactor(coeff(fa1,x,2)),"coeff(fa1,x,1)=",ifactor(coeff(fa1,x,1))):
						print("coeff(fa1,x,0)=",ifactor(coeff(fa1,x,0))):
						return():
					fi:
				fi:
			fi:
		fi:
	od:
	od:
end proc:

# 18 Sept 2024
galois_check:=proc()
	local a,b,c,d,discR2,f,g1,g2,r,r2,rFact,s:
	
	f:=x^4-z*x^3+(-3/8*z^6+2*z^4-37/8*z^2+4)*x^2+(19/16*z^7-9/2*z^5+135/16*z^3-6*z-1/8*z^9)*x+2+9/4*z^6-107/128*z^8+1/4*z^2+5/32*z^10-3/256*z^12-719/256*z^4:
	a:=coeff(f,x,3):
	b:=coeff(f,x,2):
	c:=coeff(f,x,1):
	d:=coeff(f,x,0):
	r:=x^3-b*x^2+(a*c-4*d)*x-(a*a*d-4*b*d+c*c):
	rFact:=factor(512*r):
	print("512*r=",rFact):
	s:=solve(op(1,rFact),x):
	print("s=",s):
	r2:=op(2,rFact):
	discR2:=discrim(r2,x):
	print("disc(quadratic factor)=",factor(discR2)):
	
	g1:=x^2-s*x+d:
	g2:=x^2+a*x+b-s:
	print("disc(g1)=",factor(discrim(g1,x))):
	print("disc(g2)=",factor(discrim(g2,x))):
end proc:
